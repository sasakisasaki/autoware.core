<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="map_path" description="lanelet2 map directory path"/>

  <!-- Global parameters -->
  <arg name="use_sim_time" default="false" description="use_sim_time"/>
  <arg name="vehicle_model" description="vehicle model name"/>
  <arg name="sensor_model" description="sensor model name"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <!-- Optional parameters -->
  <!-- Modules to be launched -->
  <arg name="launch_map" default="true" description="launch map"/>
  <arg name="launch_sensing" default="true" description="launch sensing"/>
  <arg name="launch_sensing_driver" default="true" description="do launch sensing driver"/>
  <arg name="launch_localization" default="true" description="launch localization"/>
  <arg name="launch_perception" default="true" description="launch perception"/>
  <arg name="launch_planning" default="true" description="launch planning"/>
  <arg name="launch_control" default="true" description="launch control"/>
  <arg name="launch_vehicle" default="true" description="launch vehicle"/>
  <arg name="launch_api" default="true" description="launch api"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share autoware_global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <!-- Map -->
  <group if="$(var launch_map)">
    <include file="$(find-pkg-share autoware_core_map)/launch/autoware_core_map.launch.xml">
      <arg name="lanelet2_map_path" value="$(var map_path)/lanelet2_map.osm"/>
      <arg name="map_projector_info_path" value="$(var map_path)/map_projector_info.yaml"/>
      <arg name="pointcloud_map_path" value="$(var map_path)/pointcloud_map.pcd"/>
      <arg name="pointcloud_map_metadata_path" value="$(var map_path)/pointcloud_map/metadata.yaml"/>
    </include>
  </group>

  <!-- Sensing -->
  <group if="$(var launch_sensing)">
    <include file="$(find-pkg-share autoware_core_sensing)/launch/autoware_core_sensing.launch.xml">
      <arg name="launch_driver" value="$(var launch_sensing_driver)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_mirror_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Localization -->
  <group if="$(var launch_localization)">
    <include file="$(find-pkg-share autoware_core_localization)/launch/autoware_core_localization.launch.xml"/>
  </group>

  <!-- Perception -->
  <group if="$(var launch_perception)">
    <include file="$(find-pkg-share autoware_core_perception)/launch/autoware_core_perception.launch.xml"/>
  </group>

  <!-- Planning -->
  <group if="$(var launch_planning)">
    <include file="$(find-pkg-share autoware_core_planning)/launch/autoware_core_planning.launch.xml"/>
  </group>

  <!-- Control -->
  <group if="$(var launch_control)">
    <include file="$(find-pkg-share autoware_core_control)/launch/autoware_core_control.launch.xml"/>
  </group>

  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" description="vehicle specific ID"/>
  <group if="$(var launch_vehicle)">
    <include file="$(find-pkg-share autoware_core_vehicle)/launch/autoware_core_vehicle.launch.xml">
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
    </include>
  </group>

  <group if="$(var launch_api)">
    <include file="$(find-pkg-share autoware_core_api)/launch/autoware_core_api.launch.xml"/>
  </group>

  <!-- Tools -->
  <group>
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(find-pkg-share autoware_core)/rviz/autoware_core.rviz"/>
  </group>
</launch>
